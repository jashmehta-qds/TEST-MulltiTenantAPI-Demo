
{
	"info": {
		"_postman_id": "ea4f41d1-2295-4bbb-be96-503f605acf47",
		"name": "TEST_MulltiTenantAPI_Demo",
		"description": "This is selection of basic REST API tests for TEST_MulltiTenantAPI_Demo created by RestApiNEx",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "JWT",
			"item": [
				{
					"name": "Account",
					"item": [
						{
							"name": "1.GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "41c03b18-dcc3-4f79-a242-d6e33d86375e",
										"exec": [
											"",
											"var data = JSON.parse(responseBody);",
											"//jwt_token defined in Edit collection - Variable",
											"//in this test populated",
											"postman.clearGlobalVariable(\"jwt_token\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"jwt_token\", data.token); ",
											"pm.globals.set(\"jwt_token\", data.token);",
											"",
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//var data = JSON.parse(responseBody);",
											"//postman.setEnvironmentVariable(\"token\", data.token);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e493431d-3367-488f-aea5-7ff6c99f4f35",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"UserName\": \"my@email.com\",\n\"Password\": \"mysecretpassword123\"\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/token",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"token"
									]
								},
								"description": "This test must be executed the first to get token value for other tests"
							},
							"response": []
						},
						{
							"name": "Add",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "221df8e7-4e36-464d-8715-c5e6c1384910",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "66536b85-5e2c-4a66-a903-5ec026dd13c8",
										"type": "text/javascript",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"account_addedid\");  ",
											"postman.setGlobalVariable(\"account_addedid\", responseBody); ",
											"pm.globals.set(\"account_addedid\", responseBody);",
											"//",
											"setTimeout(function(){}, 500);  //must have this to have time for global addedid to propagate",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Brad Pitt\",\n    \"email\": \"bradpitt@anasoft.net\",\n    \"description\":\"description\",\n    \"isTrial\": true,\n    \"IsActive\": true,\n    \"SetActive\": \"2018-12-01\"\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/account",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add async",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "221df8e7-4e36-464d-8715-c5e6c1384910",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4e3c62f6-618e-46a1-9838-c0bb521fcc5f",
										"type": "text/javascript",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"//",
											"postman.clearGlobalVariable(\"accountasync_addedid\");  ",
											"postman.setGlobalVariable(\"accountasync_addedid\", responseBody); ",
											"pm.globals.set(\"accountasync_addedid\", responseBody);",
											"//",
											"setTimeout(function(){}, 500);",
											"",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Brad Pitt\",\n    \"email\": \"bradpitt@anasoft.net\",\n    \"description\":\"description\",\n    \"isTrial\": true,\n    \"IsActive\": true,\n    \"SetActive\": \"2018-12-01\"\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/accountasync",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"accountasync"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47ed0a0a-5d36-4aef-abae-9e3e236c2a03",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"verify account counts\",  () => {",
											"    pm.expect(pm.response.json().length).to.be.above(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "84ceac94-4490-4684-bef1-5eeca0e69f81",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/account",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAll async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67dac4cb-99e7-4cae-851a-035b07a0b902",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"verify account counts\",  () => {",
											"    pm.expect(pm.response.json().length).to.be.above(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/accountasync",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"accountasync"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "092dfded-6b8e-4518-950c-faaed23dd10b",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"account_addedrowversion\");  ",
											"postman.setGlobalVariable(\"account_addedrowversion\", pm.response.json().rowVersion); ",
											"pm.globals.set(\"account_addedrowversion\", pm.response.json().rowVersion);",
											"//",
											"pm.test(\"verify account returned\",  () => {",
											"   pm.expect(pm.response.json().id).to.be.above(0);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/account/{{account_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"account",
										"{{account_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "69acd59c-affe-41e5-966f-f5b57c784b0d",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"accountasync_addedrowversion\");  ",
											"postman.setGlobalVariable(\"accountasync_addedrowversion\", pm.response.json().rowVersion); ",
											"pm.globals.set(\"accountasync_addedrowversion\", pm.response.json().rowVersion);",
											"//",
											"pm.test(\"verify account returned\",  () => {",
											"  pm.expect(pm.response.json().id).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/accountasync/{{accountasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"accountasync",
										"{{accountasync_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d2ca76fc-10df-4ec3-82b9-a58e0454b8de",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"//updated",
											"pm.test(\"verify account updated\",  () => {",
											"   pm.expect(pm.response.json().description).to.be.equal(\"updated\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n        \"id\": {{account_addedid}},\n        \"name\": \"Brad Pitt - update3\",\n        \"email\": \"email3@anasoft.net\",\n        \"description\": \"updated\",\n        \"isTrial\": true,\n        \"isActive\": true,\n        \"setActive\": \"2018-12-01T00:00:00\",\n        \"rowVersion\":\"{{account_addedrowversion}}\",\n        \"testText\": null\n    }"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/account/{{account_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"account",
										"{{account_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d0afe353-c00b-4f0e-830c-9d068f19fe02",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"//updated",
											"pm.test(\"verify account updated\",  () => {",
											"   pm.expect(pm.response.json().description).to.be.equal(\"updated\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n        \"id\": {{accountasync_addedid}},\n        \"name\": \"Brad Pitt - update3\",\n        \"email\": \"email3@anasoft.net\",\n        \"description\": \"updated\",\n        \"isTrial\": true,\n        \"isActive\": true,\n        \"setActive\": \"2018-12-01T00:00:00\",\n        \"rowVersion\":\"{{accountasync_addedrowversion}}\",\n        \"testText\": null\n    }"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/accountasync/{{accountasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"accountasync",
										"{{accountasync_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31384209-6078-4f65-90b1-f01a36ed0655",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/account/{{account_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"account",
										"{{account_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7d0eca3-b385-40c8-9dec-6d3eb17bd220",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/accountasync/{{accountasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"accountasync",
										"{{accountasync_addedid}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "User",
					"item": [
						{
							"name": "1.GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "41c03b18-dcc3-4f79-a242-d6e33d86375e",
										"exec": [
											"",
											"var data = JSON.parse(responseBody);",
											"//jwt_token defined in Edit collection - Variable",
											"//in this test populated",
											"postman.clearGlobalVariable(\"jwt_token\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"jwt_token\", data.token); ",
											"pm.globals.set(\"jwt_token\", data.token);",
											"",
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//var data = JSON.parse(responseBody);",
											"//postman.setEnvironmentVariable(\"token\", data.token);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e493431d-3367-488f-aea5-7ff6c99f4f35",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"UserName\": \"my@email.com\",\n\"Password\": \"mysecretpassword123\"\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/token",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"token"
									]
								},
								"description": "This test must be executed the first to get token value for other tests"
							},
							"response": []
						},
						{
							"name": "Add",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "221df8e7-4e36-464d-8715-c5e6c1384910",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2c044953-195e-4f0c-b04b-98ae140f7d1f",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"postman.clearGlobalVariable(\"user_addedid\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"user_addedid\", responseBody); ",
											"pm.globals.set(\"user_addedid\", responseBody);",
											"setTimeout(function(){}, 500);  //must have this to have time for global addedid to propagate",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"FirstName\": \"Brad\",\n    \"LastName\": \"Pitt\",\n    \"UserName\": \"my1@email.com\",\n    \"Email\":\"bradpitt@anasoft.net\",\n    \"Description\": \"description\",\n    \"IsAdminRole\": true,\n    \"IsActive\": true,\n    \"Password\": \"mysecretpassword123\",\n    \"AccountId\": 1\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/user",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add async",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "221df8e7-4e36-464d-8715-c5e6c1384910",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f97e586d-69cb-49ce-9c57-bfcedc1ee0ca",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"postman.clearGlobalVariable(\"userasync_addedid\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"userasync_addedid\", responseBody); ",
											"pm.globals.set(\"userasync_addedid\", responseBody);",
											"setTimeout(function(){}, 500);  //must have this to have time for global addedid to propagate",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"FirstName\": \"Brad\",\n    \"LastName\": \"Pitt\",\n    \"UserName\": \"my1@email.com\",\n    \"Email\":\"bradpitt@anasoft.net\",\n    \"Description\": \"description\",\n    \"IsAdminRole\": true,\n    \"IsActive\": true,\n    \"Password\": \"mysecretpassword123\",\n    \"AccountId\": 1\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/userasync",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"userasync"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47ed0a0a-5d36-4aef-abae-9e3e236c2a03",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"verify account counts\",  () => {",
											"    pm.expect(pm.response.json().length).to.be.above(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "84ceac94-4490-4684-bef1-5eeca0e69f81",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/user",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAll async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67dac4cb-99e7-4cae-851a-035b07a0b902",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"verify account counts\",  () => {",
											"    pm.expect(pm.response.json().length).to.be.above(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/userasync",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"userasync"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09754b14-90e7-4176-8d65-b589abd85002",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"user_addedrowversion\");  ",
											"postman.setGlobalVariable(\"user_addedrowversion\", pm.response.json().rowVersion); ",
											"pm.globals.set(\"user_addedrowversion\", pm.response.json().rowVersion);",
											"//",
											"pm.test(\"verify user returned\",  () => {",
											"   pm.expect(pm.response.json().id).to.be.above(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/user/{{user_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"user",
										"{{user_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d8f9109-23ec-497e-a0bd-9fa397bc3240",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"userasync_addedrowversion\");  ",
											"postman.setGlobalVariable(\"userasync_addedrowversion\", pm.response.json().rowVersion); ",
											"pm.globals.set(\"userasync_addedrowversion\", pm.response.json().rowVersion);",
											"//",
											"pm.test(\"verify user returned\",  () => {",
											"   pm.expect(pm.response.json().id).to.be.above(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/userasync/{{userasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"userasync",
										"{{userasync_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d8f43312-caa9-412e-b3d5-cc0b5e46c476",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"//updated",
											"pm.test(\"verify user updated\",  () => {",
											"   pm.expect(pm.response.json().description).to.be.equal(\"updated\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\":{{user_addedid}},\n    \"FirstName\": \"Brad\",\n    \"LastName\": \"Pitt\",\n    \"UserName\": \"my1@email.com\",\n    \"Email\":\"bradpitt@anasoft.net\",\n    \"Description\": \"updated\",\n    \"IsAdminRole\": true,\n    \"IsActive\": true,\n    \"Password\": \"mysecretpassword123\",\n    \"AccountId\": 1,\n    \"rowVersion\": \"{{user_addedrowversion}}\",\n    \"testText\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/user/{{user_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"user",
										"{{user_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44d857ee-f00d-4441-8947-59d8bd4d6db7",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"//updated",
											"pm.test(\"verify user updated\",  () => {",
											"   pm.expect(pm.response.json().description).to.be.equal(\"updated\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\":{{userasync_addedid}},\n    \"FirstName\": \"Brad\",\n    \"LastName\": \"Pitt\",\n    \"UserName\": \"my1@email.com\",\n    \"Email\":\"bradpitt@anasoft.net\",\n    \"Description\": \"updated\",\n    \"IsAdminRole\": true,\n    \"IsActive\": true,\n    \"Password\": \"mysecretpassword123\",\n    \"AccountId\": 1,\n    \"rowVersion\": \"{{userasync_addedrowversion}}\",\n    \"testText\": null\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/userasync/{{userasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"userasync",
										"{{userasync_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7d0eca3-b385-40c8-9dec-6d3eb17bd220",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/user/{{user_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"user",
										"{{user_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7d0eca3-b385-40c8-9dec-6d3eb17bd220",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/userasync/{{userasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"userasync",
										"{{userasync_addedid}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "017c1497-4de2-483d-b034-6069b8565a9f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1e8fe73d-d426-4232-968e-90ecf44a71ca",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
				,{
					"name": "TaxAccountNumber",
					"item": [
						{
							"name": "1.GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dc0b3eb2-457e-4440-b78f-e682f2735dc8",
										"exec": [
											"",
											"var data = JSON.parse(responseBody);",
											"//jwt_token defined in Edit collection - Variable",
											"//in this test populated",
											"postman.clearGlobalVariable(\"jwt_token\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"jwt_token\", data.token); ",
											"pm.globals.set(\"jwt_token\", data.token);",
											"",
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//var data = JSON.parse(responseBody);",
											"//postman.setEnvironmentVariable(\"token\", data.token);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "060e2135-6bc2-468e-ada2-dacb408b1b26",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"UserName\": \"my@email.com\",\n\"Password\": \"mysecretpassword123\"\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/token",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"token"
									]
								},
								"description": "This test must be executed the first to get token value for other tests"
							},
							"response": []
						},
						{
							"name": "Add",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1b81a6c7-c922-42a0-88c2-db04388c51d9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1ad4abfd-9485-4825-9aff-5b4f60f4f795",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"taxaccountnumber_addedid\");  ",
											"postman.setGlobalVariable(\"taxaccountnumber_addedid\", responseBody); ",
											"pm.globals.set(\"taxaccountnumber_addedid\", responseBody);",
											"//",
											"setTimeout(function(){}, 500);  //must have this to have time for global addedid to propagate",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"TestText\": \"tt\"\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumber",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumber"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add async",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "927c7ade-6cfc-4879-968a-01c19c1f33a9",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ee253bdb-d3ad-4d15-aaaf-50a689ecd968",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"//",
											"postman.clearGlobalVariable(\"taxaccountnumberasync_addedid\");  ",
											"postman.setGlobalVariable(\"taxaccountnumberasync_addedid\", responseBody); ",
											"pm.globals.set(\"taxaccountnumberasync_addedid\", responseBody);",
											"//",
											"setTimeout(function(){}, 500);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"TestText\": \"tt\"\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumberasync",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumberasync"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ca3f5b32-98e3-43b7-b519-f8e4d155e5ff",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"verify account counts\",  () => {",
											"    pm.expect(pm.response.json().length).to.be.above(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ffc8e98b-5c7d-4d38-8f9d-dc994721a415",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumber",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumber"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAll async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "764b4972-8410-4024-9286-a7460a15b2a3",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"verify taxaccountnumber counts\",  () => {",
											"    pm.expect(pm.response.json().length).to.be.above(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumberasync",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumberasync"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e6ce62f-886d-4a3a-891a-34d08de04501",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"taxaccountnumber_addedrowversion\");  ",
											"postman.setGlobalVariable(\"taxaccountnumber_addedrowversion\", pm.response.json().rowVersion); ",
											"pm.globals.set(\"taxaccountnumber_addedrowversion\", pm.response.json().rowVersion);",
											"//",
											"pm.test(\"verify taxaccountnumber returned\",  () => {",
											"   pm.expect(pm.response.json().id).to.be.above(0);",
											"});",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumber/{{taxaccountnumber_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumber",
										"{{taxaccountnumber_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "695514a0-d37d-4261-b209-28694b621ad3",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"taxaccountnumberasync_addedrowversion\");  ",
											"postman.setGlobalVariable(\"taxaccountnumberasync_addedrowversion\", pm.response.json().rowVersion); ",
											"pm.globals.set(\"taxaccountnumberasync_addedrowversion\", pm.response.json().rowVersion);",
											"//",
											"pm.test(\"verify taxaccountnumber returned\",  () => {",
											"  pm.expect(pm.response.json().id).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumberasync/{{taxaccountnumberasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumberasync",
										"{{taxaccountnumberasync_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea1f0c60-f287-4cec-998d-c0569b58059d",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"//updated",
											"pm.test(\"verify taxaccountnumber updated\",  () => {",
											"   pm.expect(pm.response.json().testText).to.be.equal(\"tt updated\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n        \"id\": {{taxaccountnumber_addedid}},\n        \"testText\": \"tt updated\",\n        \"rowVersion\":\"{{taxaccountnumber_addedrowversion}}\"\n    }"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumber/{{taxaccountnumber_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumber",
										"{{taxaccountnumber_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ff53b0b6-2232-456e-8904-cc97d439d837",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"//updated",
											"pm.test(\"verify taxaccountnumber updated\",  () => {",
											"   pm.expect(pm.response.json().testText).to.be.equal(\"tt updated\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n        \"id\": {{taxaccountnumberasync_addedid}},\n        \"testText\": \"tt updated\",\n        \"rowVersion\":\"{{taxaccountnumberasync_addedrowversion}}\"\n    }"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumberasync/{{taxaccountnumberasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumberasync",
										"{{taxaccountnumberasync_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56579f62-c1aa-45ba-bf5f-e3b052a2bf3b",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumber/{{taxaccountnumber_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumber",
										"{{taxaccountnumber_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23e558ac-a593-4a15-941a-d0ddbf30b9bc",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwt_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumberasync/{{taxaccountnumberasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumberasync",
										"{{taxaccountnumberasync_addedid}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "Default JWT TaxAccountNumber tests",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d40af69c-be6f-4e42-8449-12487389985b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1f4477df-364a-41fe-be83-edae66c98544",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}				
			],
			"description": "JWT Authentication\n\nNOTE: Set \"UseIndentityServer4\": false in Api's appsettings.json and run API server\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4094f08b-55fb-42e2-9c48-9573966b4aaf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8466e275-6b36-4d67-b21a-081033a4914a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "IS4",
			"item": [
				{
					"name": "Account",
					"item": [
						{
							"name": "1.GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79528e6b-9c51-47eb-a407-db8861076675",
										"exec": [
											"var data = JSON.parse(responseBody);",
											"//is4_token defined in Edit collection - Variable",
											"//in this test populated",
											"postman.clearGlobalVariable(\"is4_token\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"is4_token\", data.access_token); ",
											"pm.globals.set(\"is4_token\", data.access_token);",
											"",
											"console.log(\"is4_token\", data.access_token);",
											"",
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//var data = JSON.parse(responseBody);",
											"//postman.setEnvironmentVariable(\"token\", data.token);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "my@email.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "mysecretpassword123",
											"type": "text"
										},
										{
											"key": "account_id",
											"value": "TEST_MulltiTenantAPI_DemoAccount",
											"type": "text"
										},
										{
											"key": "account_secret",
											"value": "secret",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read-write",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{is4baseurl}}/connect/token",
									"protocol": "http",
									"host": [
										"{{is4baseurl}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "221df8e7-4e36-464d-8715-c5e6c1384910",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ce22a602-aabc-497e-ba39-1442e33a1546",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"postman.clearGlobalVariable(\"account_addedid\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"account_addedid\", responseBody); ",
											"pm.globals.set(\"account_addedid\", responseBody);",
											"setTimeout(function(){}, 500);  //must have this to have time for global addedid to propagate",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Brad Pitt\",\n    \"email\": \"bradpitt@anasoft.net\",\n    \"description\":\"description\",\n    \"isTrial\": true,\n    \"IsActive\": true,\n    \"SetActive\": \"2018-12-01\"\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/account",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add async",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "221df8e7-4e36-464d-8715-c5e6c1384910",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a7e08d8e-d6e0-4d20-b8ea-a3ae298f9922",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"postman.clearGlobalVariable(\"accountasync_addedid\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"accountasync_addedid\", responseBody); ",
											"pm.globals.set(\"accountasync_addedid\", responseBody);",
											"setTimeout(function(){}, 500);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Brad Pitt\",\n    \"email\": \"bradpitt@anasoft.net\",\n    \"description\":\"description\",\n    \"isTrial\": true,\n    \"IsActive\": true,\n    \"SetActive\": \"2018-12-01\"\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/accountasync",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"accountasync"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47ed0a0a-5d36-4aef-abae-9e3e236c2a03",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"verify account counts\",  () => {",
											"    pm.expect(pm.response.json().length).to.be.above(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "84ceac94-4490-4684-bef1-5eeca0e69f81",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/account",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"account"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAll async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47ed0a0a-5d36-4aef-abae-9e3e236c2a03",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"verify account counts\",  () => {",
											"    pm.expect(pm.response.json().length).to.be.above(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "84ceac94-4490-4684-bef1-5eeca0e69f81",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/accountasync",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"accountasync"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "34354726-bee9-4bb8-ab38-dde36f12f42b",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"account_addedrowversion\");  ",
											"postman.setGlobalVariable(\"account_addedrowversion\", pm.response.json().rowVersion); ",
											"pm.globals.set(\"account_addedrowversion\", pm.response.json().rowVersion);",
											"//",
											"pm.test(\"verify account returned\",  () => {",
											"   pm.expect(pm.response.json().id).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/account/{{account_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"account",
										"{{account_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f06f11f2-9d84-4c4c-a213-8a4de179c4c1",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"accountasync_addedrowversion\");  ",
											"postman.setGlobalVariable(\"accountasync_addedrowversion\", pm.response.json().rowVersion); ",
											"pm.globals.set(\"accountasync_addedrowversion\", pm.response.json().rowVersion);",
											"//",
											"pm.test(\"verify account returned\",  () => {",
											"  pm.expect(pm.response.json().id).to.be.above(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/accountasync/{{accountasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"accountasync",
										"{{accountasync_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d2ca76fc-10df-4ec3-82b9-a58e0454b8de",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"//updated",
											"pm.test(\"verify account updated\",  () => {",
											"   pm.expect(pm.response.json().description).to.be.equal(\"updated\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n        \"id\": {{account_addedid}},\n        \"name\": \"Brad Pitt - update3\",\n        \"email\": \"email3@anasoft.net\",\n        \"description\": \"updated\",\n        \"isTrial\": true,\n        \"isActive\": true,\n        \"setActive\": \"2018-12-01T00:00:00\",\n        \"rowVersion\":\"{{account_addedrowversion}}\",\n        \"testText\": null\n    }"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/account/{{account_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"account",
										"{{account_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d0afe353-c00b-4f0e-830c-9d068f19fe02",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"//updated",
											"pm.test(\"verify account updated\",  () => {",
											"   pm.expect(pm.response.json().description).to.be.equal(\"updated\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n        \"id\": {{accountasync_addedid}},\n        \"name\": \"Brad Pitt - update3\",\n        \"email\": \"email3@anasoft.net\",\n        \"description\": \"updated\",\n        \"isTrial\": true,\n        \"isActive\": true,\n        \"setActive\": \"2018-12-01T00:00:00\",\n        \"rowVersion\":\"{{accountasync_addedrowversion}}\",\n        \"testText\": null\n    }"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/accountasync/{{accountasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"accountasync",
										"{{accountasync_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "31384209-6078-4f65-90b1-f01a36ed0655",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/account/{{account_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"account",
										"{{account_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7d0eca3-b385-40c8-9dec-6d3eb17bd220",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/accountasync/{{accountasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"accountasync",
										"{{accountasync_addedid}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "User",
					"item": [
						{
							"name": "1.GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79528e6b-9c51-47eb-a407-db8861076675",
										"exec": [
											"var data = JSON.parse(responseBody);",
											"//is4_token defined in Edit collection - Variable",
											"//in this test populated",
											"postman.clearGlobalVariable(\"is4_token\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"is4_token\", data.access_token); ",
											"pm.globals.set(\"is4_token\", data.access_token);",
											"",
											"console.log(\"is4_token\", data.access_token);",
											"",
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//var data = JSON.parse(responseBody);",
											"//postman.setEnvironmentVariable(\"token\", data.token);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "my@email.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "mysecretpassword123",
											"type": "text"
										},
										{
											"key": "user_id",
											"value": "TEST_MulltiTenantAPI_DemoUser",
											"type": "text"
										},
										{
											"key": "user_secret",
											"value": "secret",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read-write",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{is4baseurl}}/connect/token",
									"protocol": "http",
									"host": [
										"{{is4baseurl}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "221df8e7-4e36-464d-8715-c5e6c1384910",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2c044953-195e-4f0c-b04b-98ae140f7d1f",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"postman.clearGlobalVariable(\"user_addedid\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"user_addedid\", responseBody); ",
											"pm.globals.set(\"user_addedid\", responseBody);",
											"setTimeout(function(){}, 500);  //must have this to have time for global addedid to propagate",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"FirstName\": \"Brad\",\n    \"LastName\": \"Pitt\",\n    \"UserName\": \"my1@email.com\",\n    \"Email\":\"bradpitt@anasoft.net\",\n    \"Description\": \"description\",\n    \"IsAdminRole\": true,\n    \"IsActive\": true,\n    \"Password\": \"mysecretpassword123\",\n    \"AccountId\": 1\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/user",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add async",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "221df8e7-4e36-464d-8715-c5e6c1384910",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f97e586d-69cb-49ce-9c57-bfcedc1ee0ca",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"postman.clearGlobalVariable(\"userasync_addedid\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"userasync_addedid\", responseBody); ",
											"pm.globals.set(\"userasync_addedid\", responseBody);",
											"setTimeout(function(){}, 500);  //must have this to have time for global addedid to propagate",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"FirstName\": \"Brad\",\n    \"LastName\": \"Pitt\",\n    \"UserName\": \"my1@email.com\",\n    \"Email\":\"bradpitt@anasoft.net\",\n    \"Description\": \"description\",\n    \"IsAdminRole\": true,\n    \"IsActive\": true,\n    \"Password\": \"mysecretpassword123\",\n    \"AccountId\": 1\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/userasync",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"userasync"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47ed0a0a-5d36-4aef-abae-9e3e236c2a03",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"verify account counts\",  () => {",
											"    pm.expect(pm.response.json().length).to.be.above(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "84ceac94-4490-4684-bef1-5eeca0e69f81",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/user",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"user"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAll async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67dac4cb-99e7-4cae-851a-035b07a0b902",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"verify account counts\",  () => {",
											"    pm.expect(pm.response.json().length).to.be.above(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/userasync",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"userasync"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09754b14-90e7-4176-8d65-b589abd85002",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"user_addedrowversion\");  ",
											"postman.setGlobalVariable(\"user_addedrowversion\", pm.response.json().rowVersion); ",
											"pm.globals.set(\"user_addedrowversion\", pm.response.json().rowVersion);",
											"//",
											"pm.test(\"verify user returned\",  () => {",
											"   pm.expect(pm.response.json().id).to.be.above(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/user/{{user_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"user",
										"{{user_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8a9f682a-da02-44b6-b54b-8468f2da139f",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"userasync_addedrowversion\");  ",
											"postman.setGlobalVariable(\"userasync_addedrowversion\", pm.response.json().rowVersion); ",
											"pm.globals.set(\"userasync_addedrowversion\", pm.response.json().rowVersion);",
											"//",
											"pm.test(\"verify user returned\",  () => {",
											"   pm.expect(pm.response.json().id).to.be.above(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/userasync/{{userasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"userasync",
										"{{userasync_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d8f43312-caa9-412e-b3d5-cc0b5e46c476",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"//updated",
											"pm.test(\"verify user updated\",  () => {",
											"   pm.expect(pm.response.json().description).to.be.equal(\"updated\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\":{{user_addedid}},\n    \"FirstName\": \"Brad\",\n    \"LastName\": \"Pitt\",\n    \"UserName\": \"my1@email.com\",\n    \"Email\":\"bradpitt@anasoft.net\",\n    \"Description\": \"updated\",\n    \"IsAdminRole\": true,\n    \"IsActive\": true,\n    \"Password\": \"mysecretpassword123\",\n    \"AccountId\": 1,\n    \"rowVersion\": \"{{user_addedrowversion}}\",\n    \"testText\": null\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/user/{{user_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"user",
										"{{user_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "44d857ee-f00d-4441-8947-59d8bd4d6db7",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"//updated",
											"pm.test(\"verify user updated\",  () => {",
											"   pm.expect(pm.response.json().description).to.be.equal(\"updated\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\":{{userasync_addedid}},\n    \"FirstName\": \"Brad\",\n    \"LastName\": \"Pitt\",\n    \"UserName\": \"my1@email.com\",\n    \"Email\":\"bradpitt@anasoft.net\",\n    \"Description\": \"updated\",\n    \"IsAdminRole\": true,\n    \"IsActive\": true,\n    \"Password\": \"mysecretpassword123\",\n    \"AccountId\": 1,\n    \"rowVersion\": \"{{userasync_addedrowversion}}\",\n    \"testText\": null\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/userasync/{{userasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"userasync",
										"{{userasync_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7d0eca3-b385-40c8-9dec-6d3eb17bd220",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/user/{{user_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"user",
										"{{user_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7d0eca3-b385-40c8-9dec-6d3eb17bd220",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/userasync/{{userasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],

									"path": [
										"api",
										"userasync",
										"{{userasync_addedid}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			
				,{
					"name": "TaxAccountNumber",
					"item": [
						{
							"name": "1.GetToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d3f913af-4187-4917-8c98-64b0e6d5b577",
										"exec": [
											"var data = JSON.parse(responseBody);",
											"//is4_token defined in Edit collection - Variable",
											"//in this test populated",
											"postman.clearGlobalVariable(\"is4_token\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"is4_token\", data.access_token); ",
											"pm.globals.set(\"is4_token\", data.access_token);",
											"",
											"console.log(\"is4_token\", data.access_token);",
											"",
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//var data = JSON.parse(responseBody);",
											"//postman.setEnvironmentVariable(\"token\", data.token);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "my@email.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "mysecretpassword123",
											"type": "text"
										},
										{
											"key": "taxaccountnumber_id",
											"value": "TEST_MulltiTenantAPI_DemoTaxAccountNumber",
											"type": "text"
										},
										{
											"key": "taxaccountnumber_secret",
											"value": "secret",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "read-write",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://{{is4baseurl}}/connect/token",
									"protocol": "http",
									"host": [
										"{{is4baseurl}}"
									],
									"path": [
										"connect",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cd44c159-6d15-45cd-8361-6ca8c8dbfef4",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "88d1a005-2159-4663-abb7-bc9db9d21973",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"postman.clearGlobalVariable(\"taxaccountnumber_addedid\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"taxaccountnumber_addedid\", responseBody); ",
											"pm.globals.set(\"taxaccountnumber_addedid\", responseBody);",
											"setTimeout(function(){}, 500);  //must have this to have time for global addedid to propagate",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"TestText\": \"tt\"\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumber",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumber"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add async",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f1a0d0ac-916d-49a5-a019-525de6ad2eff",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "29ad4f42-b6f2-493b-bdbd-3d895968dcdb",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"postman.clearGlobalVariable(\"taxaccountnumberasync_addedid\");  ",
											"//populate token variable",
											"postman.setGlobalVariable(\"taxaccountnumberasync_addedid\", responseBody); ",
											"pm.globals.set(\"taxaccountnumberasync_addedid\", responseBody);",
											"setTimeout(function(){}, 500);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"TestText\": \"tt\"\n}"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumberasync",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumberasync"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAll",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c27c7444-7589-4c5e-8a0e-8507cf1644dd",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"verify taxaccountnumber counts\",  () => {",
											"    pm.expect(pm.response.json().length).to.be.above(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bbbd691d-71d9-436e-992c-701ac0666951",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumber",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumber"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAll async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2921a438-c38a-4c22-a38f-faeffa551039",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"verify taxaccountnumber counts\",  () => {",
											"    pm.expect(pm.response.json().length).to.be.above(0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5d4bb87b-654c-4c79-80dd-e322b4ea56e6",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumberasync",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumberasync"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e2825567-ddaa-449d-920d-154f60137694",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"taxaccountnumber_addedrowversion\");  ",
											"postman.setGlobalVariable(\"taxaccountnumber_addedrowversion\", pm.response.json().rowVersion); ",
											"pm.globals.set(\"taxaccountnumber_addedrowversion\", pm.response.json().rowVersion);",
											"//",
											"pm.test(\"verify taxaccountnumber returned\",  () => {",
											"   pm.expect(pm.response.json().id).to.be.above(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumber/{{taxaccountnumber_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumber",
										"{{taxaccountnumber_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb3a80bf-09e5-4e10-9a95-39d1a58cf7b5",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"//",
											"postman.clearGlobalVariable(\"taxaccountnumberasync_addedrowversion\");  ",
											"postman.setGlobalVariable(\"taxaccountnumberasync_addedrowversion\", pm.response.json().rowVersion); ",
											"pm.globals.set(\"taxaccountnumberasync_addedrowversion\", pm.response.json().rowVersion);",
											"//",
											"pm.test(\"verify taxaccountnumber returned\",  () => {",
											"  pm.expect(pm.response.json().id).to.be.above(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumberasync/{{taxaccountnumberasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumberasync",
										"{{taxaccountnumberasync_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fac413bb-58cd-4b25-9d89-3c692ea528d2",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"//updated",
											"pm.test(\"verify taxaccountnumber updated\",  () => {",
											"   pm.expect(pm.response.json().testText).to.be.equal(\"tt updated\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n        \"id\": {{taxaccountnumber_addedid}},\n        \"testText\": \"tt updated\",\n        \"rowVersion\":\"{{taxaccountnumber_addedrowversion}}\"\n    }"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumber/{{taxaccountnumber_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumber",
										"{{taxaccountnumber_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15d2a540-1cef-45ba-9fdd-f7225ba4dd3c",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(202);",
											"});",
											"",
											"//updated",
											"pm.test(\"verify account updated\",  () => {",
											"   pm.expect(pm.response.json().testText).to.be.equal(\"tt updated\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\n        \"id\": {{taxaccountnumberasync_addedid}},\n        \"testText\": \"tt updated\",\n        \"rowVersion\":\"{{taxaccountnumberasync_addedrowversion}}\"\n    }"
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumberasync/{{taxaccountnumberasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumberasync",
										"{{taxaccountnumberasync_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteById",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bed75440-7e64-451b-b818-cdebf178d1b5",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumber/{{taxaccountnumber_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumber",
										"{{taxaccountnumber_addedid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "DeleteById async",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d300bdb0-2a7f-4d2a-bdaf-d617713ea833",
										"exec": [
											"// example using pm.response.to.have",
											"pm.test(\"response is ok\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{is4_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://{{apibaseurl}}/api/taxaccountnumberasync/{{taxaccountnumberasync_addedid}}",
									"protocol": "http",
									"host": [
										"{{apibaseurl}}"
									],
									"path": [
										"api",
										"taxaccountnumberasync",
										"{{taxaccountnumberasync_addedid}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "Deafult IS4 taxaccountnumber tests",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a18eabb1-3e96-4f19-b5ef-0d0c9562e6e2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b282c0c0-5ab1-462e-b4a3-7a8be00446fc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
				

			],
			"description": "IndentityServer4 Authentication\n\nNOTE: Before running tests run IndentityServer and set \"UseIndentityServer4\": true in Api's appsettings.json and run Api server",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1c47a7ce-fa9f-4187-9261-f9bf6f206e2c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7a16b529-1e78-444e-932f-14c05772d129",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}

	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "802e320e-97b0-4af7-bc78-c468561e7df9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c16740b6-9152-4eee-9b4a-4f52178c813d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "2942c45b-81cc-4181-a1e8-ce6ff9796010",
			"key": "apibaseurl",
			"value": "localhost:44341",
			"type": "string"
		},
		{
			"id": "58529c26-9df5-48e3-93be-fac3abfce654",
			"key": "is4baseurl",
			"value": "localhost:5000",
			"type": "string"
		}
	]
}